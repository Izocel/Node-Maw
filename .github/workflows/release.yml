name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for changelog generation

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run ci

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation (you might want to use a proper tool)
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$PREV_TAG" ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes since $PREV_TAG" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Initial release" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ðŸš€ **Node-MAW v${{ steps.version.outputs.version }}**
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          ```bash
          npm install node-maw@${{ steps.version.outputs.version }}
          ```
          
          ## NPM Package
          ðŸ“¦ [node-maw@${{ steps.version.outputs.version }}](https://www.npmjs.com/package/node-maw/v/${{ steps.version.outputs.version }})
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Update package.json version reference
      run: |
        echo "âœ… Released v${{ steps.version.outputs.version }} to NPM"
        echo "ðŸ”— https://www.npmjs.com/package/node-maw/v/${{ steps.version.outputs.version }}"